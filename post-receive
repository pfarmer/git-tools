#!/bin/bash
#
# An example hook script that is called after a successful
# commit is made.
#
# To enable this hook, make this file executable.


# CONFIG
FROM="Commits <commits@hbhosting.co.uk>"
TO="commits@hbhosting.co.uk"
BCC="pfarmer@gmail.com"

export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/git/bin

ARGS=`cat`

verbose=true

# Default shell globbing messes things up downstream
GLOBIGNORE=*

function info {
  $verbose && echo >&2 "-Info-          $1"
}


REF1=`echo $ARGS | awk '{print $1}'`
REF2=`echo $ARGS | awk '{print $2}'`
REF3=`echo $ARGS | awk '{print $3}'`
_PWD=`pwd`
DEPOT=`basename ${_PWD}`

# Check if commit/push is made to a branch we are interested in.
if [ ! `echo $REF3 | grep -q info/notify` ]; then
	# Its turns out we are interested in the commit/push
	info "Going to notify about commit/push ($REF3)"

	# Build up the mail command
	ABBREVHASH=`git-log --pretty=format:%h HEAD -1`
	SUBJECT="commit to ${REF3} in ${DEPOT} - HEAD is now ${ABBREVHASH}"

	if [ ! -z "${BCC}" ]; then
		info "Adding bcc entries"
		# Add the bcc's to MAILCMD
		BCC="-b ${BCC}"
	fi

	# Complete the MAILCMD with a final recipient
	
	git-log --pretty=medium -p ${REF1}..${REF2} | mailx -s "${SUBJECT}" -a "From: ${FROM}" ${BCC} ${TO}
fi
