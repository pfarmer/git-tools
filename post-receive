#!/usr/bin/python
#
# Copyright (C) 2009 Peter Farmer
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2, as 
# published by the Free Software Foundation
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License version 2 for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

import smtplib
import fileinput
import logging
from subprocess import Popen, PIPE
import os
import ConfigParser
import re

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("post-receive")

REPO_DIR = os.getcwd()

config = ConfigParser.ConfigParser()
config.read('%s/info/hooks.conf' % REPO_DIR)

hdrfrom = config.get('post-receive', 'from')
hdrfrom_name = config.get('post-receive', 'from_name')
hdrto = config.get('post-receive', 'to')
hdrto_name = config.get('post-receive', 'to_name')
projname = config.get('post-receive', 'projectname')

INPUT = []
for line in fileinput.input():
	logger.debug(line.split())
	INPUT = line.split()

OLDVALUE = INPUT[0]
NEWVALUE = INPUT[1]
REFNAME = INPUT[2]

# Checking that we want to notify about this update
logger.debug("Checking notify")
if os.path.exists("%s/info/notify" % REPO_DIR):
	# Ok - notify file exists, let read it and see what it says
	for line in open("%s/info/notify" % REPO_DIR):
		line = line.strip()
		if re.match("^#.*$", line):
			pass
		else:
			logger.debug("Checking ref: %s against %s" % (line, REFNAME))
			if re.match("%s" % line, REFNAME):
				logger.info("Matched ref: %s against %s" % (line, REFNAME))

				# Generate Subject line
				abbrevhash = NEWVALUE[:7]
				SUBJECT = "commit to %s in %s - HEAD is now %s" % (REFNAME, projname, abbrevhash)
				logger.debug("Subject: %s" % SUBJECT)

				# Start building the message
				msg = ("From: %s <%s>\r\nTo: %s <%s>\r\n" % (hdrfrom_name, hdrfrom, hdrto_name, hdrto))
				msg = msg + "Subject: %s\r\n\r\n" % SUBJECT

				# Generate the message body
				logarg = "%s..%s" % (OLDVALUE, NEWVALUE)
				log = Popen(['git', 'log', '--pretty=medium', '-p', logarg], stdout=PIPE).communicate()[0]
				msg = msg + log
			
				# Send the message
				server = smtplib.SMTP('localhost')
				server.sendmail(hdrfrom, hdrto, msg)
				server.quit()
				exit()
else:
	logger.error("info/notify doesn't exist, not going to send any commit messages")
