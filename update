#!/usr/bin/python

import sys
import logging
import os
import re
import grp

logging.basicConfig(level=logging.INFO)

logger = logging.getLogger("update")

argv = sys.argv[1:]

ref_name = argv[0]
old_object = argv[1]
new_object = argv[2]
GIT_DIR = os.environ["GIT_DIR"]
REPO_DIR = os.getcwd()
USERNAME = os.environ["LOGNAME"]

logger.debug("REPO_DIR   = %s" % REPO_DIR)
logger.debug("USERNAME   = %s" % USERNAME)
logger.debug("ref name   = %s" % ref_name)
logger.debug("old object = %s" % old_object)
logger.debug("new object = %s" % new_object)

def Grant(message=None):
	if message == None:
		exit(0)	
	else:
		logger.info(message)
		exit(0)

def Deny(message=None):
	if message == None:
		exit(1)
	else:
		logger.error(message)
		exit(1)

logger.debug("Checking allowed-users")
if os.path.exists("%s/info/allowed-users" % REPO_DIR):
	logger.debug("%s/info/allowed-users exists!" % REPO_DIR)

	# Read in allowed-users
	for line in open("%s/info/allowed-users" % REPO_DIR):
		line = line.strip()
		if re.match("^#.*$", line):
			pass
		else:		
			parts = line.split()
			logger.debug("Checking ref: %s against %s" % (parts[0], ref_name))
			if re.match("%s" % parts[0], ref_name):
				# We found a potential match
				logger.info("Matched ref: %s against %s" % (parts[0], ref_name))
				# now check the username
				logger.debug("Checking user: %s against %s" % (parts[1], USERNAME))
				if re.match("^%s$" % parts[1], USERNAME):
					Grant("Matched username: %s against %s" % (parts[1], USERNAME))

logger.debug("Checking allowed groups")
if os.path.exists("%s/info/allowed-groups" % REPO_DIR):
	logger.debug("%s/info/allowed-groups exists" % REPO_DIR)
	
	# Read in allowed-groups
	for line in open("%s/info/allowed-groups" % REPO_DIR):
		line = line.strip()
		if re.match("^#.*$", line):
			pass
		else:
			parts = line.split()
			logger.debug("Checking ref: %s against %s" % (parts[0], ref_name))
			if re.match("%s" % parts[0], ref_name):
				# We found a potential match
				logger.info("Matched ref: %s against %s" % (parts[0], ref_name))
				# Now check the group
				logger.debug("Checking group: %s for %s" % (parts[1], USERNAME))

				group = grp.getgrnam(parts[1])

				for user in group[3]:
					if user == USERNAME:
						Grant("Matched group membership: %s in %s" % (USERNAME, parts[1]))

# Last line!
Deny("No more rules to check!")
